# -*- coding: utf-8 -*-
"""
Created on Thu Feb 26 13:14:17 2015

@author: chenj
"""
import os
import numpy as np
from csv import reader, writer
from sklearn.ensemble import RandomForestClassifier
import six
import gzip

# Set path to your consolidated files
path = os.path.dirname(os.path.realpath(__file__))
os.chdir(path)

# File names
ftrain  = 'train_feature.csv'
ftest   = 'test_feature.csv'
flabel  = 'trainLabels.csv'
fsubmission = 'submission.gz'

# Parameters for Randomforest
ntree = 100
verbose = 2

# Dimensions for train and test set
ntrain     = 10868
ntrfeature = 16**2 + 1 + 1   # For two_byte_codes, filesize, label
ntest      = 10873
nfeature   = 16**2 + 1       # For two_byte_codes, filesize


# Decide read/write mode based on python version
read_mode, write_mode = ('r','wb') if six.PY2 else ('rt','wt')

# Decide zip based on python version
if six.PY2:
    from itertools import izip
    zp = izip
else:
    zp = zip
    
############################
##  Training              ##
############################
print('loading started')
# Lets read labels first as things are not sorted in files
labels = {}
with open(flabel) as f:
    next(f)    # Ignoring header
    for row in reader(f):
        labels[row[0]] = int(row[1])
print('labels loaded')


train = np.zeros((ntrain, ntrfeature), dtype = int)
with open(ftrain, read_mode) as f:
    next(f)    # Ignoring header
    for t,row in enumerate(reader(f)):
        train[t,:-1] = map(int, row[1:]) if six.PY2 else list(map(int, row[1:]))
        train[t,-1] = labels[row[0]]
        if(t+1)%1000==0:
            print(t+1, 'records loaded')
print('training set loaded')

del labels

clf = RandomForestClassifier(n_estimators = ntree, verbose = verbose)

# Start training
print('training started')
clf.fit(train[:,:-1], train[:,-1])
print('training completed')

# We don't need training set now
del train

#################################
## Predict for whole test set  ##
#################################

# set up test data
test = np.zeros((ntest, nfeature), dtype = int)
Ids = []    # Required test set ids

with open(ftest, read_mode) as f:
    next(f)    # Ignoring header
    for t,row in enumerate(reader(f)):
        test[t,:] = map(int, row[1:]) if six.PY2 else list(map(int, row[1:]))
        Ids.append(row[0])
        if(t+1)%1000==0:
            print(t+1, 'records loaded')
print('test set loaded')

y_pred = clf.predict_proba(test)

##############################
## create submission file   ##
##############################

with gzip.open(fsubmission, write_mode) as f:
    fw = writer(f)
    # Header preparation
    header = ['Id'] + ['Prediction'+str(i) for i in range(1,10)]
    fw.writerow(header)
    for t, (Id, pred) in enumerate(zp(Ids, y_pred.tolist())):
        fw.writerow([Id]+pred)
        if (t+1) % 1000 == 0:
            print(t+1, 'prediction written')
